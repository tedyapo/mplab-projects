/*
 * File:   newmain.c
 * Author: tyapo
 *
 * Created on May 24, 2020, 1:45 PM
 */
// CONFIG1
#pragma config FOSC = INTOSCCLK  // Oscillator Selection bits (INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/CLKIN)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled and can be enabled by SWDTEN bit of the WDTCON register)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config MCLRE = ON       // RE3/MCLR Pin Function Select bit (RE3/MCLR pin function is MCLR)
#pragma config CP = OFF         // Code Protection bit (Program memory code protection is disabled)
#pragma config BOREN = OFF      // Brown-out Reset Selection bits (BOR disabled)
#pragma config BORV = 19        // Brown-out Reset Voltage selection bit (Brown-out Reset Voltage (VBOR) set to 1.9 V nominal)
#pragma config PLLEN = ON       // INTOSC PLL Enable bit (INTOSC Frequency is 16MHz (32x))

// CONFIG2
#pragma config VCAPEN = DIS     // Voltage Regulator Capacitor Enable bits (All VCAP pin functions are disabled)

#include <xc.h>
#include <pic16f723a.h>

void __interrupt() ISR(void)
{
  if (PIR4bits.TMR1IF){
    timer1_overflow_count++;
    PIR4bits.TMR1IF = 0;
  }
}

void main(void) {
    OSCCONbits.IRCF = 0b01; // 4 MHz
    
    
    TRISB = 0; // PORTB all outputs
    ANSELB = 0; // PORTB all digital
    
    INTCONbits.GE = 1; // enable interrupts
    OPTIONbits.INTEDG = 0; // interrupt on falling edge
    INTCONbits.INTE = 1;
    while(1){
        PORTBbits.RB0 = 1;
        PORTBbits.RB0 = 0;
    }
    return;
}
