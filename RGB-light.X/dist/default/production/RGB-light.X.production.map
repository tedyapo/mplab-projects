Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=/opt/microchip/xc8/v2.20/pic/dat/en_msgs.txt -cn \
  -h+dist/default/production/RGB-light.X.production.sym \
  --cmf=dist/default/production/RGB-light.X.production.cmf -z -Q12F1572 \
  -o/tmp/xcXKajimL --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/RGB-light.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0200Eh-020EFh -pstack=STACK \
  -ACODE=00h-07FFh -ASTRCODE=00h-07FFh -ASTRING=00h-0FFhx8 \
  -ACONST=00h-0FFhx8 -AENTRY=00h-0FFhx8 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh \
  -ABIGRAM=02000h-020EFh -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh -ASFR4=0200h-026Fh \
  -ASFR5=0280h-02EFh -ASFR6=0300h-036Fh -ASFR7=0380h-03EFh \
  -ASFR8=0400h-046Fh -ASFR9=0480h-04EFh -ASFR10=0500h-056Fh \
  -ASFR11=0580h-05EFh -ASFR12=0600h-066Fh -ASFR13=0680h-06EFh \
  -ASFR14=0700h-076Fh -ASFR15=0780h-07EFh -ASFR16=0800h-086Fh \
  -ASFR17=0880h-08EFh -ASFR18=0900h-096Fh -ASFR19=0980h-09EFh \
  -ASFR20=0A00h-0A6Fh -ASFR21=0A80h-0AEFh -ASFR22=0B00h-0B6Fh \
  -ASFR23=0B80h-0BEFh -ASFR24=0C00h-0C6Fh -ASFR25=0C80h-0CEFh \
  -ASFR26=0D00h-0D6Fh -ASFR27=0D80h-0DEFh -ASFR28=0E00h-0E6Fh \
  -ASFR29=0E80h-0EEFh -ASFR30=0F00h-0F6Fh -ASFR31=0F80h-0FEFh \
  -ACONFIG=08007h-08008h -DCONFIG=2 -AIDLOC=08000h-08003h -DIDLOC=2 \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  /tmp/xcXGECLfH.o dist/default/production/RGB-light.X.production.o 

Object code version is 3.11

Machine type is 12F1572



                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcXGECLfH.o
                end_init                              1        1        1        0       0
                reset_vec                             0        0        1        0       0
                config                             8007     8007        2        0       4
dist/default/production/RGB-light.X.production.o
                cinit                               7FE      7FE        2      FFC       0
                config                             8007     8007        2        0       4
                text8                               6D5      6D5        1      DAA       0
                text7                               6D6      6D6        1      DAC       0
                text6                               72C      72C       57      E58       0
                text5                               6DA      6DA        9      DB4       0
                text4                               70A      70A       22      E14       0
                text3                               6F3      6F3       17      DE6       0
                text2                               783      783       7B      F06       0
                text1                               6E3      6E3       10      DC6       0
                maintext                            6D7      6D7        3      DAE       0
                cstackBANK0                          20       20        E       20       1
                cstackCOMMON                         70       70        E       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              1        1        1         0
                cinit                               7FE      7FE        2         0
                reset_vec                             0        0        1         0
                text8                               6D5      6D5        1         0
                text7                               6D6      6D6        1         0
                text6                               72C      72C       57         0
                text5                               6DA      6DA        9         0
                text4                               70A      70A       22         0
                text3                               6F3      6F3       17         0
                text2                               783      783       7B         0
                text1                               6E3      6E3       10         0
                maintext                            6D7      6D7        3         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20        E         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   SFR4           

        CLASS   SFR5           

        CLASS   SFR6           

        CLASS   SFR7           

        CLASS   SFR8           

        CLASS   SFR9           

        CLASS   SFR10          

        CLASS   SFR11          

        CLASS   SFR12          

        CLASS   SFR13          

        CLASS   SFR14          

        CLASS   SFR15          

        CLASS   SFR16          

        CLASS   SFR17          

        CLASS   SFR18          

        CLASS   SFR19          

        CLASS   SFR20          

        CLASS   SFR21          

        CLASS   SFR22          

        CLASS   SFR23          

        CLASS   SFR24          

        CLASS   SFR25          

        CLASS   SFR26          

        CLASS   SFR27          

        CLASS   SFR28          

        CLASS   SFR29          

        CLASS   SFR30          

        CLASS   SFR31          

        CLASS   CONFIG         
                config                             8007     8007        2         4

        CLASS   IDLOC          

        CLASS   BANK31         

        CLASS   BANK30         

        CLASS   BANK29         

        CLASS   BANK28         

        CLASS   BANK27         

        CLASS   BANK26         

        CLASS   BANK25         

        CLASS   BANK24         

        CLASS   BANK23         

        CLASS   BANK22         

        CLASS   BANK21         

        CLASS   BANK20         

        CLASS   BANK19         

        CLASS   BANK18         

        CLASS   BANK17         

        CLASS   BANK16         

        CLASS   BANK15         

        CLASS   BANK14         

        CLASS   BANK13         

        CLASS   BANK12         

        CLASS   BANK11         

        CLASS   BANK10         

        CLASS   BANK9          

        CLASS   BANK8          

        CLASS   BANK7          

        CLASS   BANK6          

        CLASS   BANK5          

        CLASS   BANK4          

        CLASS   BANK3          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                text1                          0006E3  000010  0006F3       DC6       0  CODE        2
                reset_vec                      000000  000002  000002         0       0  CODE        2
                text3                          0006F3  000017  00070A       DE6       0  CODE        2
                text5                          0006DA  000009  0006E3       DB4       0  CODE        2
                text4                          00070A  000022  00072C       E14       0  CODE        2
                text6                          00072C  000057  000783       E58       0  CODE        2
                text2                          000783  00007B  0007FE       F06       0  CODE        2
                text8                          0006D5  000001  0006D6       DAA       0  CODE        2
                text7                          0006D6  000001  0006D7       DAC       0  CODE        2
                maintext                       0006D7  000003  0006DA       DAE       0  CODE        2
                cinit                          0007FE  000002  000800       FFC       0  CODE        2
                cstackBANK0                    000020  00000E  00002E        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0002E-0006F              42           1
        BANK1            000A0-000EF              50           1
        BANK2            00120-0016F              50           1
        BIGRAM           02000-020EF              F0           1
        CODE             00002-006D4             6D3           2
        CONST            00002-006D4             100           2
        ENTRY            00002-006D4             100           2
        IDLOC            08000-08003               4           2
        RAM              0002E-0006F              42           1
                         000A0-000EF              50
                         00120-0016F              50
        SFR0             00000-0001F              20           1
        SFR1             00080-0009F              20           1
        SFR10            00500-0056F              70           1
        SFR11            00580-005EF              70           1
        SFR12            00600-0066F              70           1
        SFR13            00680-006EF              70           1
        SFR14            00700-0076F              70           1
        SFR15            00780-007EF              70           1
        SFR16            00800-0086F              70           1
        SFR17            00880-008EF              70           1
        SFR18            00900-0096F              70           1
        SFR19            00980-009EF              70           1
        SFR2             00100-0011F              20           1
        SFR20            00A00-00A6F              70           1
        SFR21            00A80-00AEF              70           1
        SFR22            00B00-00B6F              70           1
        SFR23            00B80-00BEF              70           1
        SFR24            00C00-00C6F              70           1
        SFR25            00C80-00CEF              70           1
        SFR26            00D00-00D6F              70           1
        SFR27            00D80-00DEF              70           1
        SFR28            00E00-00E6F              70           1
        SFR29            00E80-00EEF              70           1
        SFR3             00180-001EF              70           1
        SFR30            00F00-00F6F              70           1
        SFR31            00F80-00FEF              70           1
        SFR4             00200-0026F              70           1
        SFR5             00280-002EF              70           1
        SFR6             00300-0036F              70           1
        SFR7             00380-003EF              70           1
        SFR8             00400-0046F              70           1
        SFR9             00480-004EF              70           1
        STACK            0200E-020EF              E2           1
        STRCODE          00002-006D4             6D3           2
        STRING           00002-006D4             100           2

                                  Symbol Table

_ANSELA                  (abs)        0018C
_APFCON                  (abs)        0011D
_FERR                    (abs)        00CEA
_INLVLA                  (abs)        0038C
_LATA                    (abs)        0010C
_OERR                    (abs)        00CE9
_RCIF                    (abs)        0008D
_RCREG                   (abs)        00199
_SWDTEN                  (abs)        004B8
_TRISA                   (abs)        0008C
_TXIF                    (abs)        0008C
_TXREG                   (abs)        0019A
__Habs1                  abs1         00000
__Hbank0                 bank0        00000
__Hbank1                 bank1        00000
__Hbank10                bank10       00000
__Hbank11                bank11       00000
__Hbank12                bank12       00000
__Hbank13                bank13       00000
__Hbank14                bank14       00000
__Hbank15                bank15       00000
__Hbank16                bank16       00000
__Hbank17                bank17       00000
__Hbank18                bank18       00000
__Hbank19                bank19       00000
__Hbank2                 bank2        00000
__Hbank20                bank20       00000
__Hbank21                bank21       00000
__Hbank22                bank22       00000
__Hbank23                bank23       00000
__Hbank24                bank24       00000
__Hbank25                bank25       00000
__Hbank26                bank26       00000
__Hbank27                bank27       00000
__Hbank28                bank28       00000
__Hbank29                bank29       00000
__Hbank3                 bank3        00000
__Hbank30                bank30       00000
__Hbank31                bank31       00000
__Hbank4                 bank4        00000
__Hbank5                 bank5        00000
__Hbank6                 bank6        00000
__Hbank7                 bank7        00000
__Hbank8                 bank8        00000
__Hbank9                 bank9        00000
__Hbigram                bigram       00000
__Hcinit                 cinit        00800
__Hclrtext               clrtext      00000
__Hcode                  code         00000
__Hcommon                common       00000
__Hconfig                config       08009
__HcstackBANK0           cstackBANK0  00000
__HcstackCOMMON          cstackCOMMON 00000
__Heeprom_data           eeprom_data  00000
__Hend_init              end_init     00002
__Hfunctab               functab      00000
__Hinit                  init         00001
__Hintentry              intentry     00001
__Hmaintext              maintext     00000
__Hpowerup               powerup      00000
__Hram                   ram          00000
__Hreset_vec             reset_vec    00001
__Hsfr0                  sfr0         00000
__Hsfr1                  sfr1         00000
__Hsfr10                 sfr10        00000
__Hsfr11                 sfr11        00000
__Hsfr12                 sfr12        00000
__Hsfr13                 sfr13        00000
__Hsfr14                 sfr14        00000
__Hsfr15                 sfr15        00000
__Hsfr16                 sfr16        00000
__Hsfr17                 sfr17        00000
__Hsfr18                 sfr18        00000
__Hsfr19                 sfr19        00000
__Hsfr2                  sfr2         00000
__Hsfr20                 sfr20        00000
__Hsfr21                 sfr21        00000
__Hsfr22                 sfr22        00000
__Hsfr23                 sfr23        00000
__Hsfr24                 sfr24        00000
__Hsfr25                 sfr25        00000
__Hsfr26                 sfr26        00000
__Hsfr27                 sfr27        00000
__Hsfr28                 sfr28        00000
__Hsfr29                 sfr29        00000
__Hsfr3                  sfr3         00000
__Hsfr30                 sfr30        00000
__Hsfr31                 sfr31        00000
__Hsfr4                  sfr4         00000
__Hsfr5                  sfr5         00000
__Hsfr6                  sfr6         00000
__Hsfr7                  sfr7         00000
__Hsfr8                  sfr8         00000
__Hsfr9                  sfr9         00000
__Hspace_0               (abs)        00800
__Hspace_1               (abs)        0007E
__Hspace_2               (abs)        00000
__Hspace_3               (abs)        00000
__Hspace_4               (abs)        10010
__Hstack                 stack        00000
__Hstrings               strings      00000
__Htext                  text         00000
__Labs1                  abs1         00000
__Lbank0                 bank0        00000
__Lbank1                 bank1        00000
__Lbank10                bank10       00000
__Lbank11                bank11       00000
__Lbank12                bank12       00000
__Lbank13                bank13       00000
__Lbank14                bank14       00000
__Lbank15                bank15       00000
__Lbank16                bank16       00000
__Lbank17                bank17       00000
__Lbank18                bank18       00000
__Lbank19                bank19       00000
__Lbank2                 bank2        00000
__Lbank20                bank20       00000
__Lbank21                bank21       00000
__Lbank22                bank22       00000
__Lbank23                bank23       00000
__Lbank24                bank24       00000
__Lbank25                bank25       00000
__Lbank26                bank26       00000
__Lbank27                bank27       00000
__Lbank28                bank28       00000
__Lbank29                bank29       00000
__Lbank3                 bank3        00000
__Lbank30                bank30       00000
__Lbank31                bank31       00000
__Lbank4                 bank4        00000
__Lbank5                 bank5        00000
__Lbank6                 bank6        00000
__Lbank7                 bank7        00000
__Lbank8                 bank8        00000
__Lbank9                 bank9        00000
__Lbigram                bigram       00000
__Lcinit                 cinit        007FE
__Lclrtext               clrtext      00000
__Lcode                  code         00000
__Lcommon                common       00000
__Lconfig                config       00000
__LcstackBANK0           cstackBANK0  00000
__LcstackCOMMON          cstackCOMMON 00000
__Leeprom_data           eeprom_data  00000
__Lend_init              end_init     00001
__Lfunctab               functab      00000
__Linit                  init         00001
__Lintentry              intentry     00001
__Lmaintext              maintext     00000
__Lpowerup               powerup      00000
__Lram                   ram          00000
__Lreset_vec             reset_vec    00000
__Lsfr0                  sfr0         00000
__Lsfr1                  sfr1         00000
__Lsfr10                 sfr10        00000
__Lsfr11                 sfr11        00000
__Lsfr12                 sfr12        00000
__Lsfr13                 sfr13        00000
__Lsfr14                 sfr14        00000
__Lsfr15                 sfr15        00000
__Lsfr16                 sfr16        00000
__Lsfr17                 sfr17        00000
__Lsfr18                 sfr18        00000
__Lsfr19                 sfr19        00000
__Lsfr2                  sfr2         00000
__Lsfr20                 sfr20        00000
__Lsfr21                 sfr21        00000
__Lsfr22                 sfr22        00000
__Lsfr23                 sfr23        00000
__Lsfr24                 sfr24        00000
__Lsfr25                 sfr25        00000
__Lsfr26                 sfr26        00000
__Lsfr27                 sfr27        00000
__Lsfr28                 sfr28        00000
__Lsfr29                 sfr29        00000
__Lsfr3                  sfr3         00000
__Lsfr30                 sfr30        00000
__Lsfr31                 sfr31        00000
__Lsfr4                  sfr4         00000
__Lsfr5                  sfr5         00000
__Lsfr6                  sfr6         00000
__Lsfr7                  sfr7         00000
__Lsfr8                  sfr8         00000
__Lsfr9                  sfr9         00000
__Lspace_0               (abs)        00000
__Lspace_1               (abs)        00000
__Lspace_2               (abs)        00000
__Lspace_3               (abs)        00000
__Lspace_4               (abs)        00000
__Lstack                 stack        00000
__Lstrings               strings      00000
__Ltext                  text         00000
__S0                     (abs)        00800
__S1                     (abs)        0007E
__S2                     (abs)        00000
___int_sp                stack        00000
___latbits               (abs)        00000
___sp                    stack        00000
___stackhi               (abs)        020EF
___stacklo               (abs)        0200E
__end_of__initialization cinit        007FE
__end_of_main            maintext     006DA
__end_of_mainloop        text2        007FE
__end_of_process_packet  text6        00783
__end_of_receive         text3        0070A
__end_of_send_packet     text4        0072C
__end_of_set_pwm16       text8        006D6
__end_of_set_pwm8        text7        006D7
__end_of_setup           text1        006F3
__end_of_transmit        text5        006E3
__initialization         cinit        007FE
__pcstackBANK0           cstackBANK0  00020
__pcstackCOMMON          cstackCOMMON 00070
__pmaintext              maintext     006D7
__ptext1                 text1        006E3
__ptext2                 text2        00783
__ptext3                 text3        006F3
__ptext4                 text4        0070A
__ptext5                 text5        006DA
__ptext6                 text6        0072C
__ptext7                 text7        006D6
__ptext8                 text8        006D5
__size_of_main           (abs)        00000
__size_of_mainloop       (abs)        00000
__size_of_process_packet (abs)        00000
__size_of_receive        (abs)        00000
__size_of_send_packet    (abs)        00000
__size_of_set_pwm16      (abs)        00000
__size_of_set_pwm8       (abs)        00000
__size_of_setup          (abs)        00000
__size_of_transmit       (abs)        00000
_main                    maintext     006D7
_mainloop                text2        00783
_nWPUEN                  (abs)        004AF
_process_packet          text6        0072C
_receive                 text3        006F3
_send_packet             text4        0070A
_set_pwm16               text8        006D5
_set_pwm8                text7        006D6
_setup                   text1        006E3
_transmit                text5        006DA
btemp                    (abs)        0007E
end_of_initialization    cinit        007FE
intlevel0                functab      00000
intlevel1                functab      00000
intlevel2                functab      00000
intlevel3                functab      00000
intlevel4                functab      00000
intlevel5                functab      00000
mainloop@c               cstackBANK0  00021
mainloop@i               cstackBANK0  00023
mainloop@i_144           cstackBANK0  00024
mainloop@i_145           cstackBANK0  00022
mainloop@packet          cstackBANK0  00025
process_packet@packet    cstackCOMMON 00079
receive@packet           cstackCOMMON 00075
reset_vec                reset_vec    00000
send_packet@i            cstackCOMMON 00072
send_packet@packet       cstackCOMMON 00073
set_pwm16@blue           cstackCOMMON 00074
set_pwm16@green          cstackCOMMON 00072
set_pwm16@red            cstackCOMMON 00070
set_pwm8@blue            cstackCOMMON 00071
set_pwm8@green           cstackCOMMON 00070
start                    init         00001
start_initialization     cinit        007FE
transmit@c               cstackCOMMON 00070
wtemp0                   (abs)        0007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 218 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_mainloop
		_setup
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _setup *****************
 Defined at:
		line 33 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _mainloop *****************
 Defined at:
		line 172 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  c               1    1[BANK0 ] unsigned char 
  i               1    2[BANK0 ] unsigned char 
  i               1    4[BANK0 ] unsigned char 
  i               1    3[BANK0 ] unsigned char 
  packet          9    5[BANK0 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0      13       0       0
      Temps:          0       1       0       0
      Totals:         0      14       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_process_packet
		_receive
		_transmit
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _receive *****************
 Defined at:
		line 123 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  packet          9    5[COMMON] struct .
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         9       0       0       0
      Temps:          1       0       0       0
      Totals:        10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_send_packet
 This function is called by:
		_mainloop
 This function uses a non-reentrant model


 *************** function _send_packet *****************
 Defined at:
		line 112 in file "main.c"
 Parameters:    Size  Location     Type
  packet          1    wreg     PTR struct .
		 -> receive@packet(9), 
 Auto vars:     Size  Location     Type
  packet          1    3[COMMON] PTR struct .
		 -> receive@packet(9), 
  i               1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_transmit
 This function is called by:
		_receive
 This function uses a non-reentrant model


 *************** function _transmit *****************
 Defined at:
		line 105 in file "main.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_send_packet
		_mainloop
 This function uses a non-reentrant model


 *************** function _process_packet *****************
 Defined at:
		line 147 in file "main.c"
 Parameters:    Size  Location     Type
  packet          1    wreg     PTR struct .
		 -> mainloop@packet(9), 
 Auto vars:     Size  Location     Type
  packet          1    9[COMMON] PTR struct .
		 -> mainloop@packet(9), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          3       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_set_pwm16
		_set_pwm8
 This function is called by:
		_mainloop
 This function uses a non-reentrant model


 *************** function _set_pwm8 *****************
 Defined at:
		line 138 in file "main.c"
 Parameters:    Size  Location     Type
  red             1    wreg     unsigned char 
  green           1    0[COMMON] unsigned char 
  blue            1    1[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  red             1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_process_packet
 This function uses a non-reentrant model


 *************** function _set_pwm16 *****************
 Defined at:
		line 142 in file "main.c"
 Parameters:    Size  Location     Type
  red             2    0[COMMON] unsigned short 
  green           2    2[COMMON] unsigned short 
  blue            2    4[COMMON] unsigned short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_process_packet
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
shared
		__initialization		CODE           	07FE	0000	1

shared estimated size: 1

main.c
		_main          		CODE           	06D7	0000	4
		_process_packet		CODE           	072C	0000	88
		_mainloop      		CODE           	0783	0000	124
		_send_packet   		CODE           	070A	0000	35
		_receive       		CODE           	06F3	0000	24
		_setup         		CODE           	06E3	0000	17
		_set_pwm8      		CODE           	06D6	0000	2
		_set_pwm16     		CODE           	06D5	0000	2
		_transmit      		CODE           	06DA	0000	10

main.c estimated size: 306

